#!/bin/sh

#
# Name of this script
SCRIPT=configure

arg1=$1


#
# Process any command line arguments
args=`getopt :d $*`
if [ $? != 0 ] ; then
    echo 'Usage: $0 [-d]'
    exit 64 # EX_USAGE
fi
set -- $args
for arg ; do
    case "$arg" in
        -d) DEBUG=1; echo 'Compiling with DEBUG option'; shift;;
    esac
done

# =============================================================================
# If NETCDF is not set, look for legacy locations:
# =============================================================================
if [ -z "$NETCDF" ] ; then
  echo $SCRIPT ": NETCDF environment variable not set"
# User supplied
  if [ -d ./netcdf_links ] ; then
    NETCDF=`pwd`/netcdf_links
# System default
  elif [ -d /usr/local/netcdf ] ; then
    NETCDF=/usr/local/netcdf
  else
    echo "Could not find netCDF libraries"
    echo ""
    exit 2   #ERROR
  fi
fi

echo "Will use NETCDF in:           " $NETCDF
#
# NETCDF 3.6.2 and greater there might be a second library, libnetcdff.a 
USENETCDFF=""  
if [ -f "$NETCDF/lib/libnetcdff.a" -o -f "$NETCDF/lib/libnetcdff.so" ] ; then
  USENETCDFF="-lnetcdff"
fi


# Find individual NCEP libs, includes, and other files, if they are specified
NCEPLIBLIB=''
NCEPLIBINC=''
if [ ! -z "$BACIOLIBDIR" ]; then
  BACIOFILE=$BACIOLIBDIR/libbacio.a
  if [ -f $BACIOFILE ]; then
    echo "Found BACIO library: $BACIOFILE"
  else
    echo "ERROR: BACIOLIBDIR is set but the library does not exist"
    echo "       BACIOLIBDIR = $BACIOLIBDIR"
    echo "       Library file should be $BACIOFILE"
  fi
fi
if [ ! -z "$SPLIBDIR" ]; then
  SPFILE=$SPLIBDIR/libsp.a
  if [ -f $SPFILE ]; then
    echo "Found SP library: $SPFILE"
  else
    echo "ERROR: SPLIBDIR is set but the library does not exist"
    echo "       SPLIBDIR = $SPLIBDIR"
    echo "       Library file should be $SPFILE"
  fi
fi
if [ ! -z "$SIGIOLIBDIR" ]; then
  SIGIOFILE=$SIGIOLIBDIR/libsigio.a
  if [ -f $SIGIOFILE ]; then
    echo "Found SIGIO library: $SIGIOFILE"
  else
    echo "ERROR: SIGIOLIBDIR is set but the library does not exist"
    echo "       SIGIOLIBDIR = $SIGIOLIBDIR"
    echo "       Library file should be $SIGIOFILE"
  fi
fi
if [ ! -z "$W3EMCLIBDIR" ]; then
  W3EMCFILE=$W3EMCLIBDIR/libw3emc.a
  if [ -f $W3EMCFILE ]; then
    echo "Found W3EMC library: $W3EMCFILE"
  else
    echo "ERROR: W3EMCLIBDIR is set but the library does not exist"
    echo "       W3EMCLIBDIR = $W3EMCLIBDIR"
    echo "       Library file should be $W3EMCFILE"
  fi
fi
if [ ! -z "$W3NCOLIBDIR" ]; then
  W3NCOFILE=$W3NCOLIBDIR/libw3nco.a
  if [ -f $W3NCOFILE ]; then
    echo "Found W3NCO library: $W3NCOFILE"
  else
    echo "ERROR: W3NCOLIBDIR is set but the library does not exist"
    echo "       W3NCOLIBDIR = $W3NCOLIBDIR"
    echo "       Library file should be $W3NCOFILE"
  fi
fi
if [ ! -z "$NEMSIOLIBDIR" ]; then
  NEMSIOFILE=$NEMSIOLIBDIR/libnemsio.a
  if [ -f $NEMSIOFILE ]; then
    echo "Found NEMSIO library: $NEMSIOFILE"
  else
    echo "ERROR: NEMSIOLIBDIR is set but the library does not exist"
    echo "       NEMSIOLIBDIR = $NEMSIOLIBDIR"
    echo "       Library file should be $NEMSIOFILE"
  fi
fi
if [ ! -z "$G2LIBDIR" ]; then
  G2FILE=$G2LIBDIR/libg2.a
  if [ -f $G2FILE ]; then
    echo "Found G2 library: $G2FILE"
  else
    echo "ERROR: G2LIBDIR is set but the library does not exist"
    echo "       G2LIBDIR = $G2LIBDIR"
    echo "       Library file should be $G2FILE"
  fi
fi
if [ ! -z "$G2TMPLLIBDIR" ]; then
  G2TMPLFILE=$G2TMPLLIBDIR/libg2tmpl.a
  if [ -f $G2TMPLFILE ]; then
    echo "Found G2TMPL library: $G2TMPLFILE"
  else
    echo "ERROR: G2TMPLLIBDIR is set but the library does not exist"
    echo "       G2TMPLLIBDIR = $G2TMPLLIBDIR"
    echo "       Library file should be $G2TMPLFILE"
  fi
fi
if [ ! -z "$GFSIOLIBDIR" ]; then
  GFSIOFILE=$GFSIOLIBDIR/libgfsio.a
  if [ -f $GFSIOFILE ]; then
    echo "Found GFSIO library: $GFSIOFILE"
  else
    echo "ERROR: GFSIOLIBDIR is set but the library does not exist"
    echo "       GFSIOLIBDIR = $GFSIOLIBDIR"
    echo "       Library file should be $GFSIOFILE"
  fi
fi
if [ ! -z "$WRFIOLIBDIR" ]; then
  WRFIOFILE=$WRFIOLIBDIR/libwrfio.a
  if [ -f $WRFIOFILE ]; then
    echo "Found WRFIO library: $WRFIOFILE"
  else
    echo "ERROR: WRFIOLIBDIR is set but the library does not exist"
    echo "       WRFIOLIBDIR = $WRFIOLIBDIR"
    echo "       Library file should be $WRFIOFILE"
  fi
fi


# Find location of NCEPLIBS full package, if necessary
if [ -z "$NCEPLIBS_DIR" ] ; then
  echo "ERROR: You must define the location of the NCEP libraries (NCEPLIBS_DIR)"
  exit 1
else
  echo "Will use NCEPlibs in:         " $NCEPLIBS_DIR
  NCEPLIBLIB="-L$NCEPLIBS_DIR/lib"
  NCEPLIBINC="-I$NCEPLIBS_DIR/include"
fi

# Legacy variables; accept with or without underscores
if [ ! -z "$JASPERLIB" ]; then
  export JASPER_LIB=$JASPERLIB
fi
if [ ! -z "$JASPERINC" ]; then
  export JASPER_INC=$JASPERINC
fi

# Find location of JASPER libs and includes (for GRIB2 support)
if [ -z "$NOGRIB2" ]; then
  if [ -z "$JASPER_LIB" ] || [ -z "$JASPER_INC" ]; then
    if [ -z "$JASPER" ]; then
      echo "ERROR: You must define the locations of JASPER library (JASPER_LIB) and include (JASPER_INC) files"
      echo "       to compile UPP with GRIB2 support"
      echo ""
      echo "       To disable GRIB2 support, set the environment variable NOGRIB2 (NOT RECOMMENDED)"
      exit 1
    else
      export JASPER_LIB="$JASPER/lib"
      export JASPER_INC="$JASPER/include"
    fi
  else
    echo "Will use JASPER libraries in: " $JASPER_LIB
    echo "Will use JASPER includes in:  " $JASPER_INC
  fi
  if [ ! -d "$JASPER_LIB" ] || [ ! -d "$JASPER_INC" ]; then
    echo "ERROR: Check your JASPER location; one or both of these paths does not exist:"
    echo $JASPER_LIB
    echo $JASPER_INC
    exit 2
  fi
fi


#
# if the uname command exists, give it a shot and see if
# we can narrow the choices; otherwise, spam 'em
os="ARCH"
mach="ARCH"
type uname > /dev/null
if [ $? -eq 0 ] ; then
    os=`uname`
    if [ "$os" = "AIX" -o "$os" = "IRIX" -o "$os" = "IRIX64" -o "$os" = "SunOS" -o "$os" = "HP-UX"  -o "$os" = "Darwin" ] ; then
      mach="ARCH"
    else
      if [ "$os" = "OSF1" -o "$os" = "Linux" -o "$os" = "UNICOS/mp" -o "$os" = "UNIX_System_V" ] ; then
        mach=`uname -m`
      else
        os="ARCH"
        mach="ARCH"
      fi
    fi
fi

#
# Add directory support for build
pwd=`pwd`
if [ ! -e ./exec ] ; then
   echo "$SCRIPT: making ./exec"
   mkdir ./exec
fi

BINDIR=${pwd}/exec
echo "bindir " ${BINDIR}

if [ ! -e ./include ] ; then
   echo "$SCRIPT: making ./include"
   mkdir ./include
fi
INCMOD=${pwd}/include
echo "incmod " ${INCMOD}

if [ ! -e ./lib ] ; then
   echo "$SCRIPT: making ./lib"
   mkdir ./lib
fi
LIBDIR=${pwd}/lib
echo "libdir " ${LIBDIR}

#
# See if the env var DEBUG is set (overriding any arguments passed in)
if [ ! -z "$DEBUG" ] ; then
    DEBUG=1
fi

#
# proceed with configuration if OS is supported
srch=`grep -i "^#ARCH.*$os" sorc/arch/configure.defaults | grep -i "$mach"`
if [ -n "$srch" ] ; then
  perl sorc/arch/Config.pl -jasperlib=$JASPER_LIB -jasperinc=$JASPER_INC   \
                           -netcdf=$NETCDF -USENETCDFF=$USENETCDFF         \
                           -os=$os -mach=$mach                             \
                           -bindir=$BINDIR -incmod=$INCMOD -libdir=$LIBDIR \
                           -debug=$DEBUG
else
  echo '***********************************************'
  echo '***         ERROR ERROR ERROR ERROR         ***'
  echo '***                                         ***'
  echo '*** This platform is not supported:         ***'
  echo "    $os $mach "
  echo '***                                         ***'
  echo '*** Edit sorc/arch/configure.defaults to    ***'
  echo '*** set up a custom configuration file      ***'
  echo '***********************************************'
  exit 2
fi

#Escape slashes and spaces
NCEPLIBLIBESC=$(echo $NCEPLIBLIB | sed 's/ /\\ /g')
NCEPLIBLIBESC=$(echo $NCEPLIBLIBESC | sed 's,/,\\/,g') #Hooray for alternate delimiters!
NCEPLIBINCESC=$(echo $NCEPLIBINC | sed 's/ /\\ /g')
NCEPLIBINCESC=$(echo $NCEPLIBINCESC | sed 's,/,\\/,g')

#Add specified NCEPLIBs paths to configure.upp; don't edit file in place because
#sed has platform-specific differences for this functionality
sed 's/CONFIGURE_NCEPLIBS_LIB/'$NCEPLIBLIBESC'/g' configure.upp > .configure.upp.edit
sed 's/CONFIGURE_NCEPLIBS_INC/'$NCEPLIBINCESC'/g' .configure.upp.edit > configure.upp

if [ ! -z "$NOGRIB2" ]; then
  echo "Variable NOGRIB2 is set; compiling UPP without GRIB2 support"
  echo ""
  echo "WARNING WARNING WARNING"
  echo "  GRIB1 support for UPP will be deprecated in a future release"
  echo "  Compiling for GRIB2 is strongly recommended"
  echo "WARNING WARNING WARNING"
fi
